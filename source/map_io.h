#include "map.h"
#include "map.pb.h"
#include "common_types.h"

namespace indoor_context {
	// Load a map generated by Noah Snavley's Bundler. structure_file
	// should be bundle/bundle.out and image_list should be list.txt
	// generated by RunBundler.
	void LoadBundlerMap(const string& structure_file,
											const string& image_list_file,
											Map& map);
	// As above, but uses default filenames. bundle_dir should be the
	// directory containing list.txt.
	void LoadBundlerMap(const string& bundle_dir, Map& map);

	// Load a map from a ptam-format XML file
	// If all_frames is true then load all frames; otherwise load just
	// the key frames.
	void LoadXmlMap(const string& path,
									Map& map,
									bool include_non_keyframes=false);

	// Load a map with ground truth. Store the ground truth in gt_map.
	// If all_frames is true then load all frames; otherwise load just
	// the key frames.
	// If rotate_map is true then rotate the 3D points and camera poses
	// according to the rotation loaded into gt_map.
	void LoadXmlMapWithGroundTruth(const string& path,
																 Map& map,
																 proto::TruthedMap& gt_map,
																 bool include_non_keyframes=false,
																 bool rotate_map=true);

	// Load a map as output in text format by voodoo
	// Will look for lines of the form '#frameindex XXX' and pass the
	// number XXX into the specified format
	void LoadMapFromVoodooTextFile(const string& path,
																 const string& image_pattern,
																 Map& map);

	// Get the path to the truthed_map.pro file for a sequence, or die
	// if the sequence is not found.
	string GetMapPath(const string& sequence_name);
}
